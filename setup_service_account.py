#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Google Indexing API
"""

import json
import sys
from pathlib import Path

try:
    from google.cloud import iam_admin_v1
    from google.oauth2 import service_account
    from google.auth.transport.requests import Request
except ImportError as e:
    print(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install google-cloud-iam")
    sys.exit(1)


def check_service_account_file(file_path: str = "service_account.json"):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    
    Args:
        file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É service_account.json
    """
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞...")
    
    if not Path(file_path).exists():
        print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return None
    
    try:
        with open(file_path, 'r') as f:
            data = json.load(f)
        
        required_fields = ['type', 'project_id', 'private_key_id', 'private_key', 'client_email', 'client_id']
        missing_fields = [field for field in required_fields if field not in data]
        
        if missing_fields:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: {missing_fields}")
            return None
        
        print("‚úÖ –§–∞–π–ª —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        print(f"üìß Email: {data['client_email']}")
        print(f"üèóÔ∏è  Project ID: {data['project_id']}")
        
        return data
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return None


def test_indexing_api_access(service_account_path: str = "service_account.json"):
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ Indexing API
    
    Args:
        service_account_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É service_account.json
    """
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ Indexing API...")
    
    try:
        credentials = service_account.Credentials.from_service_account_file(
            service_account_path,
            scopes=['https://www.googleapis.com/auth/indexing']
        )
        credentials.refresh(Request())
        
        print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
        print(f"üìß –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: {credentials.service_account_email}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        return False


def print_setup_instructions():
    """
    –í—ã–≤–æ–¥ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
    """
    print("\n" + "="*60)
    print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï –°–ï–†–í–ò–°–ù–û–ì–û –ê–ö–ö–ê–£–ù–¢–ê")
    print("="*60)
    
    print("\n1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞:")
    print("   ‚Ä¢ –ó–∞–π–¥–∏—Ç–µ –≤ https://console.cloud.google.com/")
    print("   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç (–∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π)")
    print("   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ IAM & Admin ‚Üí Service Accounts")
    print("   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ Create Service Account")
    print("   ‚Ä¢ –ò–º—è: indexing-api-service")
    print("   ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: Service account for Google Indexing API")
    
    print("\n2Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π:")
    print("   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ Continue")
    print("   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ —Ä–æ–ª—å: Service Account User")
    print("   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ Done")
    
    print("\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª—é—á–∞:")
    print("   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç")
    print("   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Keys")
    print("   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ Add Key ‚Üí Create new key")
    print("   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ JSON")
    print("   ‚Ä¢ –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª –∏ –ø–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –≤ service_account.json")
    
    print("\n4Ô∏è‚É£ –í–∫–ª—é—á–µ–Ω–∏–µ Indexing API:")
    print("   ‚Ä¢ –í Google Cloud Console –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ APIs & Services ‚Üí Library")
    print("   ‚Ä¢ –ù–∞–π–¥–∏—Ç–µ Indexing API")
    print("   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ Enable")
    
    print("\n5Ô∏è‚É£ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ Search Console:")
    print("   ‚Ä¢ –ó–∞–π–¥–∏—Ç–µ –≤ https://search.google.com/search-console")
    print("   ‚Ä¢ –í–æ–π–¥–∏—Ç–µ –ø–æ–¥ rbru.org@gmail.com")
    print("   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–º–µ–Ω mmcake.ru")
    print("   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí Owners")
    print("   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ Add Owner")
    print("   ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ email —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ (–∏–∑ JSON —Ñ–∞–π–ª–∞)")
    print("   ‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ")
    
    print("\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python check_permissions.py")
    print("   ‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: python check_permissions.py --test-url https://mmcake.ru/")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import argparse
    
    parser = argparse.ArgumentParser(
        description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è Google Indexing API"
    )
    
    parser.add_argument(
        '--service-account',
        default='service_account.json',
        help='–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É service_account.json'
    )
    
    parser.add_argument(
        '--setup-instructions',
        action='store_true',
        help='–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ'
    )
    
    args = parser.parse_args()
    
    if args.setup_instructions:
        print_setup_instructions()
        return
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Google Indexing API")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    account_data = check_service_account_file(args.service_account)
    
    if not account_data:
        print("\n‚ùå –§–∞–π–ª —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω!")
        print_setup_instructions()
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ API
    if test_indexing_api_access(args.service_account):
        print("\n‚úÖ –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print(f"\nüìß Email –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ Search Console: {account_data['client_email']}")
        
        print(f"\nüîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print(f"   1. –î–æ–±–∞–≤—å—Ç–µ {account_data['client_email']} –∫–∞–∫ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≤ Search Console")
        print(f"   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python check_permissions.py")
        print(f"   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: python check_permissions.py --test-url https://mmcake.ru/")
        
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ API!")
        print_setup_instructions()


if __name__ == "__main__":
    main() 